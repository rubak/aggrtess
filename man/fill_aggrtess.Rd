% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggrtess.R
\name{fill_aggrtess}
\alias{fill_aggrtess}
\title{Fill in tiles in aggregation tessellation by sequential splitting}
\usage{
fill_aggrtess(
  x,
  ...,
  max_tiles = 10,
  max_tries = 20,
  adjust = 1.2,
  verbose = FALSE
)
}
\arguments{
\item{x}{Aggregation tessellation of class \code{aggrtess}.}

\item{...}{Ignored}

\item{max_tiles}{Maximal number of tiles to try to split before giving up.}

\item{max_tries}{Maximal number of times to try to split each tile before giving up.}

\item{adjust}{adjustment of target. See details.}

\item{verbose}{Logical to print diagnostics.}
}
\value{
Aggregation tessellation.
}
\description{
Fill in tiles in aggregation tessellation by sequential splitting
}
\details{
For each tile \code{i} the total aggregation count in the neighbourhood (tiles that share border with \code{i}) is calculated.
The size of the neighbourhood (including \code{i}) together with the target determines the minimum count required for the given neigbourhood size.
The difference between the actual count and the minimum required is called the excess. If the excess is larger than the target
the neighbourhood could in principle contain an extra tile and is eligible for a split. The one with the biggest excess is tried first.
When eligibility is considered an adjusted target (\code{adjust*target}) is considered rather than the raw target to avoid trying to split very difficult neighbourhoods
}
\examples{
X <- frb[seq(1, npoints(frb), by = 10)]
x <- aggrtess(X, centers = "hexgridcenter", target = c(50, 100))
x <- prune_aggrtess(x)
set.seed(42) # Reproducibility
y <- fill_aggrtess(x)
}
